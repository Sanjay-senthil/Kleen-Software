import { ActionType, StatisticalDataType, ThingMap } from '@kleeen/types';

export const thingsMock: ThingMap = {
  completedService: {
    actions: [
      {
        areYouSure: true,
        component: 'CompletedServiceReportIssueModal',
        description: undefined,
        displayName: `Report Issue`,
        id: `4d882b7c-3773-443f-9327-16d168155e3c`,
        isCustomModal: true,
        name: `reportIssue`,
        type: ActionType.Custom,
      },
    ],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `dateScheduled`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceRecordType`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `downtimeHours`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `estimatedCost`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `datePerformed`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceCost`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceDescription`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `uuid`,
    deepDataType: undefined,
    description: ``,
    displayName: `CompletedService`,
    editable: false,
    format: { examples: [] },
    formatType: `uuid`,
    id: 59317,
    multiple: true,
    name: `completedService`,
    prototypeId: 59314,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.FreeForm,
    type: `uuid`,
  },
  currentMileage: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `integer`,
    deepDataType: undefined,
    description: ``,
    displayName: `CurrentMileage`,
    editable: false,
    format: { min: 0, max: 189000, examples: [] },
    formatType: `integer`,
    id: 59309,
    multiple: true,
    name: `currentMileage`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.NumericDiscrete,
    type: `integer`,
  },
  datePerformed: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `serviceRecord`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `date`,
    deepDataType: undefined,
    description: ``,
    displayName: `DatePerformed`,
    editable: false,
    format: { examples: [] },
    formatType: `date`,
    id: 59303,
    multiple: true,
    name: `datePerformed`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.NumericTemporal,
    type: `date`,
  },
  dateScheduled: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `serviceRecord`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `date`,
    deepDataType: undefined,
    description: ``,
    displayName: `DateScheduled`,
    editable: false,
    format: { examples: [] },
    formatType: `date`,
    id: 59308,
    multiple: true,
    name: `dateScheduled`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.NumericTemporal,
    type: `date`,
  },
  downtimeHours: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `serviceRecord`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `integer`,
    deepDataType: undefined,
    description: ``,
    displayName: `DowntimeHours`,
    editable: false,
    format: { min: 1, max: 24, examples: [] },
    formatType: `integer`,
    id: 59305,
    multiple: true,
    name: `downtimeHours`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.NumericDiscrete,
    type: `integer`,
  },
  estimatedCost: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `serviceRecord`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `integer`,
    deepDataType: undefined,
    description: ``,
    displayName: `EstimatedCost`,
    editable: false,
    format: { min: 1, max: 100, prefix: '$', suffix: 'k', examples: [] },
    formatType: `USD`,
    id: 59304,
    multiple: true,
    name: `estimatedCost`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.NumericDiscrete,
    type: `integer`,
  },
  scheduledService: {
    actions: [
      {
        areYouSure: true,
        component: 'ScheduledServiceReportIssueModal',
        description: undefined,
        displayName: `Report Issue`,
        id: `4d882b7c-3773-443f-9327-16d168155e3c`,
        isCustomModal: true,
        name: `reportIssue`,
        type: ActionType.Custom,
      },
    ],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `dateScheduled`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceRecordType`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `downtimeHours`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `estimatedCost`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `datePerformed`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceCost`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceDescription`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `uuid`,
    deepDataType: undefined,
    description: ``,
    displayName: `ScheduledService`,
    editable: false,
    format: { examples: [] },
    formatType: `uuid`,
    id: 59315,
    multiple: true,
    name: `scheduledService`,
    prototypeId: 59314,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.FreeForm,
    type: `uuid`,
  },
  serviceCost: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `serviceRecord`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `integer`,
    deepDataType: undefined,
    description: ``,
    displayName: `ServiceCost`,
    editable: false,
    format: { min: 1, max: 100, prefix: '$', suffix: 'k', examples: [] },
    formatType: `USD`,
    id: 59307,
    multiple: true,
    name: `serviceCost`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.NumericDiscrete,
    type: `integer`,
  },
  serviceDescription: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `serviceRecord`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `ServiceDescription`,
    editable: false,
    format: {
      examples: [
        'Flat Tire',
        'Broken Glass',
        'Oil Change',
        'Regular Service Interval',
        'Batttery',
        'Exterior Damage',
        'Engine Noise',
        'Suspension',
        'Brakes',
        'Electrical',
        'Interior',
        'Air Conditioning',
        'Navigation',
        'Error Code',
        'Emissions',
        'Inspection',
        'Accident Repair',
        'Transmission',
        'Performance',
        'Detailing',
      ],
    },
    formatType: `prime`,
    id: 59302,
    multiple: true,
    name: `serviceDescription`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  serviceRecord: {
    actions: [
      {
        areYouSure: true,
        component: 'ServiceRecordReportIssueModal',
        description: undefined,
        displayName: `Report Issue`,
        id: `4d882b7c-3773-443f-9327-16d168155e3c`,
        isCustomModal: true,
        name: `reportIssue`,
        type: ActionType.Custom,
      },
    ],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `dateScheduled`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceRecordType`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `downtimeHours`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `estimatedCost`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `datePerformed`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceCost`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceDescription`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `uuid`,
    deepDataType: undefined,
    description: ``,
    displayName: `ServiceRecord`,
    editable: false,
    format: { examples: [] },
    formatType: `uuid`,
    id: 59314,
    multiple: true,
    name: `serviceRecord`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.FreeForm,
    type: `uuid`,
  },
  serviceRecordType: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `serviceRecord`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `severity_level`,
    deepDataType: undefined,
    description: ``,
    displayName: `ServiceRecordType`,
    editable: false,
    format: {
      min: 1,
      max: 4,
      examples: ['Repair', 'Warranty', 'Recall', 'Preventative'],
      severityBad: 1,
      severityGood: 4,
      severityLevels: 4,
    },
    formatType: `severity_level`,
    id: 59313,
    multiple: true,
    name: `serviceRecordType`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.OrderedSeverityRanking,
    type: `severity_level`,
  },
  timestamp: {
    actions: [],
    attributes: [],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `timestamp`,
    deepDataType: undefined,
    description: undefined,
    displayName: `Timestamp`,
    editable: false,
    format: {},
    formatType: `timestamp`,
    id: 59271,
    multiple: true,
    name: `timestamp`,
    prototypeId: undefined,
    settings: {},
    statisticalType: StatisticalDataType.NumericTemporal,
    type: `timestamp`,
  },
  vehicle: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `vehicleModel`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `serviceRecord`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicleBrand`,
      },
      {
        hasMany: true,
        isNullable: false,
        name: `currentMileage`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `warrantyStatus`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicleWarranty`,
      },
      {
        hasMany: true,
        isNullable: false,
        name: `scheduledService`,
      },
      {
        hasMany: true,
        isNullable: false,
        name: `completedService`,
      },
    ],
    canAddValues: false,
    canEditValues: true,
    crossLinking: [{ title: 'Vehicle Detail', slug: 'vehicle-detail' }],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `Vehicle`,
    editable: true,
    format: {
      examples: [
        'Fleet Car 1',
        'Fleet Car 2',
        'Fleet Car 3',
        'Fleet Car 4',
        'Loaner Car',
        'Loaner Van',
        'Loaner Truck',
        'Service Van 1',
        'Service Van 2',
        'Delivery Van',
        'Delivery Truck',
        'Service Truck 1',
        'Service Truck 2',
        'Executive Car 1',
        'Executive Car 2',
        'Executive Car 3',
        'Sales Car 1',
        'Sales Car 2',
        'Sales Car 3',
      ],
    },
    formatType: `prime`,
    id: 59333,
    multiple: true,
    name: `vehicle`,
    prototypeId: undefined,
    settings: { isEditable: true, isFilledByEU: true },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  vehicleBrand: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `vehicle`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleBrand`,
    editable: false,
    format: {
      examples: [
        'Datsun',
        'Delorean',
        'Pontiac',
        'Plymouth',
        'Desoto',
        'Mercury',
        'Tucker',
        'Oldsmobile',
        'Studebaker',
        'Kaiser',
        'Saturn',
        'AMC',
        'Edsel',
        'Auburn',
        'Checker',
        'Dusenburg',
        'Fisker',
        'Hudson',
        'MGB',
        'Triumph',
      ],
    },
    formatType: `prime`,
    id: 59330,
    multiple: true,
    name: `vehicleBrand`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  vehicleDtc: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `vehicleDtcTimestamp`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: true,
        isNullable: false,
        name: `vehicleSoftwareVersion`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [{ title: 'DTC Detail', slug: 'dtc-detail' }],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleDtc`,
    editable: false,
    format: {
      examples: [
        'Air Cleaning Module Overcurrent - Circuit Current Above Threshold',
        'Backlite Defrost Relay Fault - Signal Shape / Waveform Failure',
        'Cabin Heater (PTCHF) 12V Logic Over Voltage - Circuit Voltage Above Threshold',
        'Door Handle Rear Left 12V Supply Under Voltage - Circuit Voltage Below Threshold',
        'Ext Door Handle Power RR Undercurrent - Circuit Current Below Threshold',
        'External 12VA Out of Range - Circuit Voltage Out of Range',
      ],
    },
    formatType: `prime`,
    id: 59726,
    multiple: true,
    name: `vehicleDtc`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  vehicleEcu: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicleSoftwareVersion`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleEcu`,
    editable: false,
    format: { examples: ['RIDM', 'BPCU', 'FIDM', 'RBCM', 'FBCM', 'DCAM', 'DCBM', 'OBCMD', 'OBCMP'] },
    formatType: `prime`,
    id: 48636,
    multiple: true,
    name: `vehicleEcu`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: true },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  vehicleModel: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `vehicle`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleModel`,
    editable: false,
    format: {
      examples: [
        'M1',
        'M2',
        'M3',
        'M5',
        'M4',
        'S1',
        'S2',
        'S3',
        'S4',
        'S5',
        'X1',
        'X2',
        'X3',
        'X4',
        'X5',
        'C1',
        'C2',
        'C3',
        'C4',
        'C5',
      ],
    },
    formatType: `prime`,
    id: 59328,
    multiple: true,
    name: `vehicleModel`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  vehicleSoftwareVersion: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `vehicleEcu`,
      },
      {
        hasMany: true,
        isNullable: true,
        name: `vehicleDtc`,
      },
      {
        hasMany: true,
        isNullable: false,
        name: `vehicle`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleSoftwareVersion`,
    editable: false,
    format: { examples: ['5.4.0', '5.4.1', '5.4.2', '5.5.0', '6.0.0'] },
    formatType: `prime`,
    id: 59725,
    multiple: true,
    name: `vehicleSoftwareVersion`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: true },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  vehicleWarranty: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `warrantyStatus`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `uuid`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleWarranty`,
    editable: false,
    format: { examples: [] },
    formatType: `uuid`,
    id: 59320,
    multiple: true,
    name: `vehicleWarranty`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.FreeForm,
    type: `uuid`,
  },
  vehicleStateOfCharge: {
    actions: [],
    attributes: [
      {
        hasMany: true,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
    ],
    canAddValues: false,
    canEditValues: true,
    crossLinking: [],
    dataType: `severity_score`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleStateOfCharge`,
    editable: true,
    format: { min: 0, max: 100, severityBad: 0, severityGood: 100, severityLevels: 5 },
    formatType: `severity_score`,
    id: 48640,
    multiple: true,
    name: `vehicleStateOfCharge`,
    prototypeId: undefined,
    settings: { isEditable: true, isFilledByEU: true },
    statisticalType: StatisticalDataType.NumericSeverityRanking,
    type: `severity_score`,
  },
  vehicleTimeOfLastCharge: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `vehicle`,
      },
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `string`,
    deepDataType: undefined,
    description: ``,
    displayName: `VehicleTimeOfLastCharge`,
    editable: false,
    format: { examples: ['02/23/2022, 4:28:57 PM', '05/23/2022, 4:28:57 PM'] },
    formatType: `prime`,
    id: 48633,
    multiple: true,
    name: `vehicleTimeOfLastCharge`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: true },
    statisticalType: StatisticalDataType.Categorical,
    type: `string`,
  },
  warrantyStatus: {
    actions: [],
    attributes: [
      {
        hasMany: false,
        isNullable: false,
        name: `timestamp`,
      },
      {
        hasMany: true,
        isNullable: false,
        name: `vehicleWarranty`,
      },
      {
        hasMany: true,
        isNullable: false,
        name: `vehicle`,
      },
    ],
    canAddValues: false,
    canEditValues: false,
    crossLinking: [],
    dataType: `severity_level`,
    deepDataType: undefined,
    description: ``,
    displayName: `WarrantyStatus`,
    editable: false,
    format: {
      min: 1,
      max: 2,
      examples: ['Expired', 'Active'],
      severityBad: 1,
      severityGood: 2,
      severityLevels: 2,
    },
    formatType: `severity_level`,
    id: 59319,
    multiple: true,
    name: `warrantyStatus`,
    prototypeId: undefined,
    settings: { isEditable: false, isFilledByEU: false },
    statisticalType: StatisticalDataType.OrderedSeverityRanking,
    type: `severity_level`,
  },
};
